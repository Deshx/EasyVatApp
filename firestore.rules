rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is super admin
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.email == "oceans.deshan@gmail.com";
    }
    
    // Allow users to read and write only their own profile
    // Super admin can read all profiles for admin panel
    // System needs write access for payment processing
    match /userProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if isSuperAdmin();
      allow read, write: if true; // Allow server-side access for admin panel and payment processing
    }
    
    // User subscriptions - users can read their own, super admin can read/write all
    // System needs write access for payment processing
    match /userSubscriptions/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow read, write: if isSuperAdmin();
      allow read, write: if true; // Allow server-side access for admin panel and payment processing
    }
    
    // Payment history - users can read their own, super admin can read all, system can write
    match /paymentHistory/{paymentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read, write: if isSuperAdmin();
      allow create, update: if true; // Allow server-side access for payment processing
    }
    
    // Global subscription settings - all authenticated users can read, only super admin can write
    // Also allow server-side access for payment processing
    match /globalSettings/{settingId} {
      allow read: if true; // Allow server-side access for payment processing
      allow write: if isSuperAdmin();
    }
    
    // For invoices, users can only see their own invoices
    match /invoices/{invoiceId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // For companies, users can only see their own companies
    match /companies/{companyId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Fuel prices - read by all authenticated users, write only by super admin
    match /fuelPrices/{priceId} {
      allow read: if request.auth != null;
      allow write: if isSuperAdmin();
    }
    
    // Fuel price history - read by all authenticated users, write only by super admin
    match /fuelPriceHistory/{historyId} {
      allow read: if true; // Allow server-side access for fuel price context
      allow write: if isSuperAdmin();
    }
    
    // Invoice counters - allow full access for authenticated users
    // This is needed for the transaction-based counter increment to work properly
    match /invoiceCounters/{counterId} {
      allow read, write: if true; // Temporary: allow all operations for debugging
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Allow authenticated users to access their own invoice PDFs
    match /invoices/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
} 